name: Features - Manual (Tele)


on:
  workflow_dispatch:
    inputs:
      type_input:
        description: 'Enter the version (stable/beta/alpha/web)'
        required: true
      source_input:
        description: 'Source [apt(Aptoide) / apkc(ApkCombo) / web(Web)]'
        required: true
      msg_id_input:
        description: 'Message ID'
        required: true
 
 

jobs:
  download-and-extract:
    runs-on: ubuntu-latest
    env:
      MAIL_ID: ${{ secrets.MAIL_ID }}
      NAME: ${{ secrets.NAME }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
      PIN_MSG: ${{ secrets.PIN_MSG }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    

    - name: Install modules
      run: |
        pip install -r requirements.txt


    - name: Download & Extract
      run: | 
        vername_type=$(echo "${{ github.event.inputs.type_input }}" | tr '[:upper:]' '[:lower:]')
        src=$(echo "${{ github.event.inputs.source_input }}" | tr '[:upper:]' '[:lower:]')
        python main.py $vername_type $src
              

    - name: Add extracted file to Git
      id: vars
      run: |
        git fetch
        CHANGES=$(git diff --name-only origin/main)
        if [ -n "$CHANGES" ]; then
          echo "Changes found."
          vername=$(jq -r '.version_name' manifest.json)
          git config --global user.email "${{ env.MAIL_ID }}"
          git config --global user.name "${{ env.NAME }}"
          git pull
          git add .
          git commit -m "${vername}"
          git push
          echo "PUSH=1" >> $GITHUB_OUTPUT
        else
          echo "No changes found."
          echo "PUSH=0" >> $GITHUB_OUTPUT
        fi
    
  
    - name: Changes to Telegram
      run: |   
        python changes.py ${{ github.event.inputs.msg_id_input }} ${{ env.GIT_COMMIT_SHA }} ${{ env.BOT_TOKEN }} ${{ env.CHANNEL_ID }} ${{ env.PIN_MSG }}